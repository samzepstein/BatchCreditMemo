global class BatchCreditMemoQuote implements Database.Batchable<SObject>, Database.Stateful{
    
    Set<Id> quoteIds = new Set<ID>();
    
    List<Id> cmOppIds = new List<ID>();
    
    List<Id> revOppIds = new List<ID>();
    
    
    
    
    
    global BatchCreditMemoQuote(List<ID> cmOppIds, List<ID> revOppIds){
        this.cmOppIds = cmOppIds;
        this.revOppIds = revOppIds;
        
    }
    
    
    global static SBQQ__Quote__c createQuote(Id opId, SBQQ__Quote__c qte){
        SBQQ__Quote__c newQuote = new SBQQ__Quote__c(SBQQ__Type__c = qte.SBQQ__Type__c,
                                                     SBQQ__Primary__c = True,
                                                     SBQQ__Status__c = 'Draft',
                                                     SBQQ__Opportunity2__c = opId,
                                                     SBQQ__Account__c = qte.SBQQ__Account__c);
        
        return newQuote;
        
        
    }
    
    
    global Database.QueryLocator start(Database.BatchableContext bc) {
        
        String oppList = '[SELECT ID, Contract_Start_Date__c, Contract_End_Date__c, CloseDate'+
            'FROM Opportunity'+
            'WHERE Id IN :cmOppIds OR SBQQ__Opportunity2__c IN :revOppsIds]';
        
        system.debug('creditQuote: '+ oppList);
        
        return Database.getQueryLocator(oppList);
        
        
    }
    
    
    global void execute(Database.BatchableContext bc, List<Opportunity> scope){
        
        
        
        List<SBQQ__Quote__c> oppQuoteList  = [SELECT SBQQ__Type__c,SBQQ__Account__c, Price_List__c, Partner_Rep__c
                                FROM SBQQ__Quote__c
                                WHERE SBQQ__Opportunity2__c IN :cmOppIds OR SBQQ__Opportunity2__c IN :revOppsIds AND SBQQ__Primary__c = True]
        
        
        system.debug('start'); 
    }
    
    
    
    global void finish(Database.BatchableContext bc){
        
    }
}
